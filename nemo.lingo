programm = ws varDecl*:d ws body*:a ws { Programm(:d, :a) };
body = assignment:a {:a} | test:a {:a} | subsequenceBody:a {:a} | nonDetermenisticChoice:a {:a} | iterExec:a {:a};
subsequenceBody = "{" (body ";")* "}";
iterExec = ws "{" ws body:a ws "}" ws "*" ws { IterExec(:a) };

assignment = var:v ":=" expr:e {debug(assignment(:v, :e))};

nonDetermenisticChoice = body:first ("U" body:other)* {consArray(:first, :other)};
nonDeterministicIteration = "{" body:iter "}*" {NonDeterministicIteration(:iter)};

test = "(" cond ")?";

cond = or;
or = and:a "||" or:b | and;
and = not:a "&&" and:b | not;
not = "!" comp:c | comp:c;
comp = expr comparison expr | "(" cond ")";

comparison = greater | greaterEqual | less | lessEqual | eq | neq;

greater = ">" {greaterOperator()};
greaterEqual = ">=" {greaterEqualOperator()};
less = "<" {lessOperator()};
lessEqual = "<=" {lessEqualOperator()};
eq = "=" {equalOperator()};
neq = "!=" {neqOperator()};

expr = arrExpr | lowPrior | arrayOperation;

arrayOperation = appOperation | updOperation;

appOperation = "APP(" expr:arr comma expr:val ")" {appOperator(:arr, :val)};
updOperation = "UPD(" expr:arr comma expr:ind comma expr:val ")" {updOperator(:arr, :ind, :val)};

varDecl = "VAR" var:vName ":" nemoType:t  {varDecl(:vName, :t)};

nemoType = intType {intType()} | "[" ws nemoType:t ws "]" {ArrayType(:t)};

intType = "int";

lowPrior = hightPrior:head (add | sub)*:tail {buildLow(:head, :tail)};
add = ws '+' ws hightPrior:high {ToAdd(:high)};
sub = ws '-' ws hightPrior:high {ToSub(:high)};

hightPrior = token:head (mul | div)*:tail {buildHigh(:head, :tail)};
mul = '*' ws token:t {ToMul(:t)};
div = '/' ws token:t {ToDiv(:t)};

token = unary | inPar | atom;
unary = '-' ws token:e ws {Neg(:e)};
inPar = '(' ws expr:e ws ')' ws {:e};

arrExpr = "[" expr:firstExpr (comma expr:s {:s})*:secondAction "]" {consArray(:firstExpr, :secondAction)} 
| "[" ws "]" {consArray()};

atom = int:i ws {:i} | var:v ws {:v} | arrayOperation;


int = digit+$d {IntConst(s2i($d))};
var = letter+$v {Var($v)};
digit = '0' - '9';
letter = 'a' - 'z';
comma = ",";
ws = (' ' | '\r' | '\n' | '\t')*;
